.chapter(data-title='Setting Up The Application')
  .step(
    data-title='What Are We Building?',
    data-file='LeadAlerts.Web/Views/Home/Index.cshtml',
    data-mode='xml')
    :markdown
      ## What Are We Building?

      You probably already have landing pages or product detail views in your
      web application, which you're using to generate leads for your business. 
      In this tutorial, we'll use Twilio SMS to send a message when a new lead
      is found.

      ![Lead Alerts Flow](//s3.amazonaws.com/howtodocs/lead-alerts-flow.png)

      In this example we'll be implementing instant lead alerts for real estate
      (much like [our awesome friends at
      Trulia](//www.twilio.com/customers/stories/trulia)). We'll create a
      landing page for a new house on the market, and notify a real estate agent
      the moment a potential customer requests information. 

      Let's see how it works! Click the next arrow above to continue the tutorial.

  .step(
    data-title='Landing Page Data', 
    data-file='LeadAlerts.Web/Controllers/HomeController.cs')
    :markdown
      ## Landing Page Data

      To display a landing page for our house, we'll first need some data about
      the fictional house we've put on the market. For demonstration purposes,
      we've hard-coded the information we need.

      ---

      **See Also:**
      * [Controllers and Action Methods](//bit.ly/22KGGHr)
      * [ViewBag](//bit.ly/1MSV8Br)

  .step(data-title='Rendering the Landing Page', 
    data-file='LeadAlerts.Web/Views/Home/Index.cshtml')
    :markdown
      ## Rendering the Landing Page

      In our razor template, we insert data about the house, and in a sidebar
      include a form for the user to enter in their contact information to
      request more info about the home.

      ---

      **See Also:**
      * [Razor Engine](//razorengine.codeplex.com/)

  .step(
    data-title='Initializing the Twilio REST API Client',
    data-file='LeadAlerts.Web/Domain/NotificationService.cs')
    :markdown
      ## Creating a Twilio REST API Client

      Here we create a helper class with an authenticated Twilio REST
      API client that we can use anytime we need to send a text message. We
      initialize it with our [Twilio Account Credentials](//www.twilio.com/user/account/messaging/dashboard)
      stored in our _Local.config_ file.

      ---

      **See Also:**
      * [Twilio SMS and MMS Quickstart](//www.twilio.com/docs/quickstart/csharp/sms/sending-via-rest)

  .step(
    data-title='Sending the Message',
    data-file='LeadAlerts.Web/Domain/NotificationService.cs'
    data-highlight='21-30')
    :markdown
      ## Sending the Message

      `SendAsync` is a wrapper that makes use of the `MessageResource` to
       `CreateAsync` a message. Notice that it is not necessary to specify a client here.

      ---
      **See Also:**
      * [Twilio SMS and MMS Quickstart](//www.twilio.com/docs/quickstart/csharp/sms/sending-via-rest)

  .step(
    data-title='Handling the POST Request', 
    data-file='LeadAlerts.Web/Controllers/NotificationsController.cs',
    data-highlight='20-36')
    :markdown
      ## Handling the POST Request

      This code handles the HTTP `POST` request issued by our landing page. It
      uses our `NotificationService` class to send a SMS message to the real estate
      agent's phone number, which is also set as a environment variable. We
      include the lead's name, phone number, and inquiry directly in the body of
      the text message we send to the agent.

      Now the agent has all the information they need to immediately follow up
      on the lead.

      ---

      **See Also:**
      * [The Twilio C# Helper Library](//www.twilio.com/docs/csharp/install)

  .step
    :markdown
      ## Where to next?

      That's it! We've just implemented an application to instantly route leads
      to sales reps (in a real estate scenario) using text messages. If you're a
      .NET developer working with Twilio, you might want to check out these
      other tutorials.

      [**Browser Calls**](//www.twilio.com/docs/tutorials/walkthrough/browser-calls/csharp/mvc)

      Twilio Client allows your users to make and receive phone calls in their
      browsers

      [**Call Tracking**](https://www.twilio.com/docs/tutorials/walkthrough/call-tracking/csharp/mvc)

      Call Tracking helps you measure the effectiveness of different marketing
      campaigns.

      ### Did this help?

      Thanks for checking out this tutorial! If you have any feedback
      to share with us, we'd love to hear it. Tweet
      [@twilio](//twitter.com/twilio) to let us know what you
      think.
